---
title: "If Ranked-Choice Voting decided the (second) best Black Mirror Episode"
author: "Kevin Watanabe-Smith"
date: '2018-08-13'
categories: R
tags:
- data viz
- black mirror
- politics
- ggalluvial
best: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE, echo=FALSE, message=FALSE, warning=FALSE)
```

On a recent FiveThirtyEight <a href = "https://fivethirtyeight.com/features/politics-podcast-trump-meets-kim/">Politics Podcast</a> the hosts discussed the ranked-choice voting in Maine, and the difficulty of explaining the process to voters. While ranked-choice voting is far from simple, I think part of the complexity comes from the either obscure names of politicians or the arbitrary theoretical examples. If we had a popular example where many people have created a ranked list of options then the explanation of the method might be more tangible.

My first choice was Star Wars. With every new release, Star Wars fans take to Twitter and other social media to broadcast their ranking of the movie series. However while Star Wars is popular with plenty of published ranked lists, there has also been a consensus that has developed and I suspect any voting method will quickly coalesce around _Episode V: The Empire Strikes Back_ as the favorite. Also everyone is wrong, _Return of the Jedi_ was better. Fight me.

![](/img/searchyourfeelings.gif)

But then <a href = "http://www.businessinsider.com/every-black-mirror-episode-on-netflix-ranked-from-worst-to-best-2018-5">Business Insider</a> came out with a very-belated ranking of Black Mirror episodes and I realized this was the perfect example. While not as popular as Star Wars, Charlie Brooker's Black Mirror (on Netflix, and before that Channel 4) is composed of 19 distinct, standalone episodes. Viewers are fiercely opinionated, there is no consensus canon, and every list is wrong except this one **link twitter post**. Fight me.

## Data collection

The Black Mirror <a href = "https://www.reddit.com/r/blackmirror/">subreddit</a> has a <a href = "https://www.reddit.com/r/blackmirror/comments/7ms2r8/black_mirror_episode_rankings_thread/">dedicated thread</a> for users to post their episode rankings. I manually recorded the rankings from 111 users, considering every top-level comment that provided any sequential order of episodes, only excluding posts that were clearly ranking only episodes from a limited number of seasons (often seasons 1-3, or just season 4). This includes ranks from 11 different articles as compiled by reddit user <a href = "https://www.reddit.com/r/blackmirror/comments/7ms2r8/black_mirror_episode_rankings_thread/dsadl3c/">loonwin</a>. I have made the raw recorded data availible on github **link post**.

The data is particularly unique because many users did not make a full ranking of all 19 episodes, with some users ranking just a single episode as their favorite. This is something that could happen in an actual ranked-choice election, which brings us to the subject at hand.

## Ranked-choice voting

In a ranked-choice election (also called an "instant runoff" election) voters submit a ranked list of their preferred candidates. This would look like a ranking of your favorite movies, like:  

1. Return of the Jedi  
2. The Force Awakens  
3. Rogue One  

The top rank for every voter is counted, and the option with the fewest top ranks is eliminated from the pool. If _Return of the Jedi_ was eliminated, the ballot above would then be counted as a vote for _The Force Awakens_.

But what if a voter didn't rank every option? If all of their choices are eliminated the ballot is exhausted and will no longer be counted.

## Finding the best Black Mirror episode

So what is the best Black Mirror episode (based on 111 reddit user rankings)? Judging by most first-place votes and average rankings the clear favorite is the _White Christmas_ episode starring Jon Hamm:

```{r}
library(tidyverse)
library(forcats)
library(ggbeeswarm)
library(magrittr)
library(knitr)

library(alluvial)
library(ggalluvial)
library(extrafont)
colortable <- read_csv("c:/Users/blaze/Documents/R_Projects/BlackMirror/color_palette.csv")

```

```{r, fig.height=5, fig.width=7}
rawranks <- read_csv("c:/Users/blaze/Documents/R_Projects/BlackMirror/CompiledRedditRanks.csv")

#summary(rawranks)

longranks <- rawranks %>% 
  mutate(id = factor(id)) %>% 
  gather(key = episode, value = ranking, -user, -other, -id)

n_users <- longranks %>% filter(ranking == 1) %>% nrow()

votecount <- longranks %>% 
  filter(ranking == 1) %>% 
  group_by(episode) %>% 
  summarise(votes = n(), pct = n() / n_users) %>% 
  arrange(desc(pct))

votecolor <- votecount %>% 
  left_join(colortable, by = "episode")

ggplot(votecolor, aes(x = fct_inorder(episode), y = pct,
                      color = color, fill = color)) +
  scale_color_identity() +
  scale_fill_identity() +
  geom_bar(stat = "identity") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 20),
        plot.subtitle = element_text(hjust = 0.5, size = 16)) +  
  xlab("") +
  ylab("Percent of 1st place votes") +
  labs(title = "First Place Votes")
```

```{r, fig.height=5, fig.width=7}
by_avg_ranks <-longranks %>% 
  group_by(episode) %>% 
  summarise(avg_rank = mean(ranking, na.rm = TRUE)) %>% arrange(avg_rank) %>% 
  mutate(episode = fct_inorder(episode))

longcolor <- longranks %>% 
  left_join(colortable, by = "episode")


ggplot(longcolor, aes(y = ranking, x = factor(episode, levels = levels(by_avg_ranks$episode)),
                      color = color)) +
  scale_color_identity() +
  #geom_boxplot(outlier.shape = NA) +
  #geom_quasirandom() +
  geom_boxplot(fill = NA, outlier.shape = NA) + 
  geom_jitter(height = 0.2, width = 0.2, size = 3, alpha = 0.3) +
  scale_y_reverse(breaks = c(1,5,10,15,19)) +
  xlab("") +
  ylab("Ranking") +
  theme(axis.ticks = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        text = element_text(family = "Century Gothic", face = "bold"),
        axis.text = element_text(angle = 45, hjust = 1),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 20),
        plot.subtitle = element_text(hjust = 0.5, size = 16)) +
  geom_point(data = by_avg_ranks, aes(y = avg_rank),
             pch = 18, size = 5, color = "black") +
  labs(title = "All votes",
       subtitle = "(Mean ranking in black)")
```

Notably, _Shut Up and Dance_ and _The Entire History of You_ both recieve more 1st place votes than _San Junipero_. This is a particularly egregious miscarriage of justice as not only was _San Junipero_ the winner of the Primetime Emmy for Outstanding Television Movie, it was also my personal #1 episode while _Shut Up and Dance_ was 19th (reminder: there are only 19 episodes. Also _The Entire History of You_ is fine, it was 7th in my list).

While every episode has an incredible range of responses, _White Christmas_ is so far ahead of the rest that we're going to make a special comparison of all episodes not starring Jon Hamm to round out the top four. Sorry Jon.

![](/img/HammToast.gif)

```{r, fig.height=4, fig.width=6}
round0 <- longcolor %>% 
  arrange(ranking) %>% 
  .[!duplicated(.$id),] %>% 
  mutate(round = 0)

round1 <- longcolor %>% 
  filter(episode != "White Christmas") %>% 
  arrange(ranking) %>% 
  .[!duplicated(.$id),] %>% 
  mutate(round = 1)

hammElimination <- bind_rows(round0, round1)

ggplot(hammElimination, aes(x = round, stratum = episode, alluvium = id,
                       fill = color, label = episode)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12),
        axis.title = element_blank(),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 16),
        plot.subtitle = element_text(hjust = 0.5, size = 12)) +
  geom_flow(stat = "alluvium", lode.guidance = "leftright") +
  geom_stratum(size = 0, color = NA, na.rm = TRUE) +
  scale_fill_identity() +
  ggtitle("Redistribution of White Christmas votes") +
  labs(subtitle = "Votes assigned to second choice") +
  geom_text(stat = "stratum", family = "Century Gothic", fontface = "bold", color = "gray15", size = 2) +
  scale_x_continuous(breaks = c(0,1), labels = c("With Hamm","Without Hamm"))

totalvotes <- nrow(round1)

round1_votecount <- round1 %>% 
  group_by(episode) %>% 
  summarise(votes = n(), pct = n()/totalvotes) %>% arrange(desc(pct))
```

Interestingly, we still have the same top-3 after removing _White Christmas_. _Shut Up and Dance_ leads with `r round1_votecount %>% filter(episode == "Shut Up and Dance") %>% .$pct %>% multiply_by(100) %>% round(1)`% of the vote, followed by _San Junipero_ and _The Entire History of You_ with `r round1_votecount %>% filter(episode == "San Junipero") %>% .$pct %>% multiply_by(100) %>% round(1)`%. No option is anywhere near a majority of the vote, and currently a terrible choice is leading the pack so this looks like a perfect place to implement ranked choice voting.

So why is _San Junipero_ so poorly ranked? It could be a backlash against the popularity and praise the episode has recieved, while fans of the series are more fond of lesser-known installments. It could also be that the episode is a true outlier, depicting a story that is far happier than the rest (though _Hang the DJ_ is similarly heart-warming and doesn't suffer the same penalty). Or maybe, just maybe, it might have something to do with the gender of the two primary characters? Nah

![ ](/img/JuniperoLaugh.gif)

But ranked-choice voting will give us a window into whether _San Junipero_ is not well liked among Black Mirror fans, or if the lower ranking is driven by a minority of voters.

In the first round the episode with the fewest first-place votes will be eliminated, and those ballots will be reassigned based on the next highest ranked option still availible for that voter. In this case that will be four episodes (Arkangel, Crocodile, Playtest and The Waldo Moment) all recieving just one first place vote. Note that Metalhead and Men Against Fire recieved no first-place votes, and have already been eliminated.

```{r, fig.height=4, fig.width=6}
voter_ids <- longcolor %>% 
  select(all_ids = id) %>% unique()

episode_list <- longcolor %>% 
  filter(episode != "White Christmas") %>% 
  select(episode) %>% unique() %>% .$episode %>% as.character()

user <- vector()
r_ep <- vector()
r_round <- vector()
roundcounter <- 0

while(length(episode_list) > 1){
  roundcounter <- roundcounter + 1
  
  for(i in voter_ids$all_ids) {
    choice <- longcolor %>% 
      filter(episode %in% episode_list) %>% 
      filter(!is.na(ranking)) %>% 
      filter(id == i) %>% 
      arrange(ranking) %>% .$episode %>% .[1]
    
    #if(is.na(choice)) {next}
    if(is.na(choice)) {choice <- "-"}
    
    user <- append(user, i)
    r_ep <- append(r_ep, choice)
    r_round <- append(r_round, roundcounter)
  }
  
  nonWC_elimination <- data.frame(id = user, round = r_round, episode = r_ep) 
  
  episode_list <- nonWC_elimination %>% 
    filter(r_round == roundcounter &
             !is.na(episode) &
             episode != "-") %>% 
    group_by(episode) %>% count() %>% 
    ungroup() %>% filter(n > min(n)) %>% .$episode %>% as.character()
  
  #print(episode_list)
  
}

nonWC_elimination$episode <- as.factor(nonWC_elimination$episode)
nonWC_elimination$id <- as.factor(nonWC_elimination$id)

nonWC_elimination_color <- nonWC_elimination %>% left_join(colortable, by = "episode")

ggplot(data = 
         nonWC_elimination_color %>% filter(round <= 2), 
       aes(x = round, stratum = episode, alluvium = id,
                       fill = color, label = episode)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12),
        axis.title = element_blank(),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 16),
        plot.subtitle = element_text(hjust = 0.5, size = 12)) +
  geom_flow(stat = "alluvium", lode.guidance = "leftright") +
  geom_stratum(size = 0, color = NA, na.rm = TRUE) +
  scale_fill_identity() +
  ggtitle("Ranked Choice Voting for Black Mirror Episodes") +
  labs(subtitle = "Non-Jon Hamm edition") +
  geom_text(stat = "stratum", family = "Century Gothic", fontface = "bold", color = "gray15", size = 2) +
  scale_x_continuous(breaks = seq(1,10,1), labels = c("Round 1", "Round 2", "Round 3",
                                                     "Round 4", "Round 5", "Round 6",
                                                     "Round 7", "Round 8", "Round 9",
                                                     "Round 10"))
```

A few things to note after the first round. The voters who ranked _Crocodile_, _Waldo_, and _Arkangel_ as their favorites had their votes moved to their second-favorite episodes (_The Entire History of You_ for the former two, _Be Right Back_ for the latter).

Also the sole voter who loved _Playtest_ refused to rank any other episodes as back-up options, so their vote has been removed for all future consideration. By not ranking more than one option this voter actually **reduced** their ability to influence this election. Are you following?

![Good](/img/Playtest.gif)

Let's speed through a few more rounds of elimination.

```{r, fig.height=6, fig.width=10}
ggplot(data = 
         nonWC_elimination_color %>% filter(round <= 7), 
       aes(x = round, stratum = episode, alluvium = id,
                       fill = color, label = episode)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12),
        axis.title = element_blank(),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 16),
        plot.subtitle = element_text(hjust = 0.5, size = 12)) +
  geom_flow(stat = "alluvium", lode.guidance = "leftright") +
  geom_stratum(size = 0, color = NA, na.rm = TRUE) +
  scale_fill_identity() +
  ggtitle("Ranked Choice Voting for Black Mirror Episodes") +
  labs(subtitle = "Non-Jon Hamm edition") +
  geom_text(stat = "stratum", family = "Century Gothic", fontface = "bold", color = "gray15", size = 3) +
  scale_x_continuous(breaks = seq(1,10,1), labels = c("Round 1", "Round 2", "Round 3",
                                                     "Round 4", "Round 5", "Round 6",
                                                     "Round 7", "Round 8", "Round 9",
                                                     "Round 10"))

round7totalvotes <- nonWC_elimination_color %>% filter(episode != "-") %>% 
  filter(round == 7) %>% nrow()

round7votecount <- nonWC_elimination_color %>% filter(round == 7) %>% 
  #filter(episode != "-") %>% 
  group_by(episode) %>% 
  summarise(votes = n(), pct = round(n()/round7totalvotes,3) * 100) %>% 
  arrange(desc(pct))

kable(round7votecount)
```

So in narrowing the field of episodes down to 5 we see our first example of a strong coalition. _Be Right Back_ is eliminated and well over half of those votes go to _San Junipero_, propelling it into the lead for the first time. If you've seen the show you'll know that these episodes are primarily focused around a romantic relationship that is absent in most other Black Mirror episodes. So it makes sense that the users who liked _Be Right Back_ also ranked _San Junipero_ higher than more unnerving or non-romantic episodes like _Shut Up and Dance_, _White Bear_, or _Fifteen Million Merits_.

Next round we'll see the elimination of _White Bear_ and followed by (barring a radically skewed, coalition-type redistribution) _Fifteen Million Merits_.

```{r, fig.height=8, fig.width=13}
ggplot(data = 
         nonWC_elimination_color %>% filter(round <= 9), 
       aes(x = round, stratum = episode, alluvium = id,
                       fill = color, label = episode)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12),
        axis.title = element_blank(),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 16),
        plot.subtitle = element_text(hjust = 0.5, size = 12)) +
  geom_flow(stat = "alluvium", lode.guidance = "leftright") +
  geom_stratum(size = 0, color = NA, na.rm = TRUE) +
  scale_fill_identity() +
  ggtitle("Ranked Choice Voting for Black Mirror Episodes") +
  labs(subtitle = "Non-Jon Hamm edition") +
  geom_text(stat = "stratum", family = "Century Gothic", fontface = "bold", color = "gray15", size = 3) +
  scale_x_continuous(breaks = seq(1,10,1), labels = c("Round 1", "Round 2", "Round 3",
                                                     "Round 4", "Round 5", "Round 6",
                                                     "Round 7", "Round 8", "Round 9",
                                                     "Round 10"))

round9totalvotes <- nonWC_elimination_color %>% filter(episode != "-") %>% 
  filter(round == 9) %>% nrow()

round9votecount <- nonWC_elimination_color %>% filter(round == 9) %>% 
  #filter(episode != "-") %>% 
  group_by(episode) %>% 
  summarise(votes = n(), pct = round(n()/round9totalvotes,3) * 100) %>% 
  arrange(desc(pct))

kable(round9votecount)
```

Lovers of _White Bear_ broke predominantly for _San Junipero_. As a result _Fifteen Million Merits_ was eliminated and those votes were split fairly evenly among the remaining three episodes. The ultimate victor will come down to the preferences of voters that have (so far) supported _The Entire History of You_, an episode that both focuses on a romantic relationship and its inevitable, destructive collapse driven by dystopic technology. So there are similarities to both of the remaining contenders.

```{r, fig.height=8, fig.width=13}
ggplot(data = 
         nonWC_elimination_color, 
       aes(x = round, stratum = episode, alluvium = id,
                       fill = color, label = episode)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12),
        axis.title = element_blank(),
        text = element_text(family = "Century Gothic", face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 16),
        plot.subtitle = element_text(hjust = 0.5, size = 12)) +
  geom_flow(stat = "alluvium", lode.guidance = "leftright") +
  geom_stratum(size = 0, color = NA, na.rm = TRUE) +
  scale_fill_identity() +
  ggtitle("Ranked Choice Voting for Black Mirror Episodes") +
  labs(subtitle = "Non-Jon Hamm edition") +
  geom_text(stat = "stratum", family = "Century Gothic", fontface = "bold", color = "gray15", size = 3) +
  scale_x_continuous(breaks = seq(1,10,1), labels = c("Round 1", "Round 2", "Round 3",
                                                     "Round 4", "Round 5", "Round 6",
                                                     "Round 7", "Round 8", "Round 9",
                                                     "Round 10"))

round10totalvotes <- nonWC_elimination_color %>% filter(episode != "-") %>% 
  filter(round == 9) %>% nrow()

round10votecount <- nonWC_elimination_color %>% filter(round == 10) %>% 
  #filter(episode != "-") %>% 
  group_by(episode) %>% 
  summarise(votes = n(), pct = round(n()/round10totalvotes,3) * 100) %>% 
  arrange(desc(pct))

kable(round10votecount)
```

_San Junipero_ picks up just over half of the votes from _The Entire History of You_, as more reddit users prefer _San Junipero_ over _Shut Up and Dance_. By crossing the threshold of 50% of all (eligible) votes, we can safely declare crisis averted and _San Junipero_ to be the (second) **BEST Black Mirror episode of all time!**

![](/img/SanJunipero.gif)

If you're interested in this analysis, you can find the raw data plus code for analysis and visualizations on GitHub **link**. In addition, I have a separate post on this blog walking through making the Sankey diagrams using the ggalluvial package in R.
